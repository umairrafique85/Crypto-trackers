levels(testLevelsFrame$newlevels)[unique(c(agrep('coastal flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('erosion', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('beach flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('coastal flooding', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'COASTAL FLOOD'
levels(testLevelsFrame$newlevels)[agrep('dense fog', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DENSE FOG'
levels(testLevelsFrame$newlevels)[agrep('dense smoke', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DENSE SMOKE'
levels(testLevelsFrame$newlevels)[agrep('drought', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DROUGHT'
levels(testLevelsFrame$newlevels)[agrep('dust devil', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DUST DEVIL'
levels(testLevelsFrame$newlevels)[agrep('dust storm', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DUST STORM'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('excessive heat', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heat wave', levels(testLevelsFrame$newlevels), ignore.case = T))), agrep('drought', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'EXCESSIVE HEAT'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('extreme cold wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold wave', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('bitter wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blowing snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('extreme wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record cold', levels(testLevelsFrame$newlevels), ignore.case = T))), agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'EXTREME COLD/WIND CHILL'
levels(testLevelsFrame$newlevels)[setdiff(agrep('flash flood', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('ice storm', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'FLASH FLOOD'
levels(testLevelsFrame$newlevels)[setdiff(agrep('flood', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('coastal flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('flash flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('lake flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('remnants of floyd', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'FLOOD'
levels(testLevelsFrame$newlevels)[agrep('frost freeze', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'FROST FREEZE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('funnel cloud', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'FUNNEL CLOUD'
levels(testLevelsFrame$newlevels)[agrep('freezing fog', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'FREEZING FOG'
levels(testLevelsFrame$newlevels)[setdiff(agrep('hail', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('bitter wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blowing snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('extreme wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold wind chill', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'HAIL'
levels(testLevelsFrame$newlevels)[unique(c(agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy shower', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'HEAVY RAIN'
levels(testLevelsFrame$newlevels)[setdiff(agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('heavy shower', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'HEAVY SNOW'
levels(testLevelsFrame$newlevels)[agrep('high surf', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'HIGH SURF'
levels(testLevelsFrame$newlevels)[setdiff(agrep('high wind', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('hurricane', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('marine high wind', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record cold', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'HIGH WIND'
levels(testLevelsFrame$newlevels)[agrep('hurricane', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'HURRICANE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('ice storm', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'ICE STORM'
levels(testLevelsFrame$newlevels)[agrep('lake effect snow', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'LAKE EFFECT SNOW'
levels(testLevelsFrame$newlevels)[agrep('lakeshore flood', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'LAKESHORE FLOOD'
levels(testLevelsFrame$newlevels)[setdiff(agrep('lightning', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('tstm', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'LIGHTNING'
levels(testLevelsFrame$newlevels)[setdiff(agrep('marine hail', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('marine high wind', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'MARINE HAIL'
levels(testLevelsFrame$newlevels)[agrep('marine strong wind', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'MARINE STRONG WIND'
levels(testLevelsFrame$newlevels)[agrep('marine high wind', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'MARINE HIGH WIND'
levels(testLevelsFrame$newlevels)[agrep('marine thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'MARINE THUNDERSTORM WIND'
levels(testLevelsFrame$newlevels)[agrep('rip current', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'RIP CURRENT'
levels(testLevelsFrame$newlevels)[agrep('seiche', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'SEICHE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('sleet', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'SLEET'
levels(testLevelsFrame$newlevels)[agrep('storm surge', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'STORM SURGE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('strong wind', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('marine strong wind', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'STRONG WIND'
levels(testLevelsFrame$newlevels)[setdiff(agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('marine thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'THUNDERSTORM WIND'
levels(testLevelsFrame$newlevels)[agrep('tornado', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'TORNADO'
levels(testLevelsFrame$newlevels)[agrep('tropical depression', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'TROPICAL DEPRESSION'
levels(testLevelsFrame$newlevels)[agrep('tropical storm', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'TROPICAL STORM'
levels(testLevelsFrame$newlevels)[agrep('tsunami', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'TSUNAMI'
levels(testLevelsFrame$newlevels)[agrep('volcanic ash', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'VOLCANIC ASH'
levels(testLevelsFrame$newlevels)[setdiff(agrep('waterspout', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('dust devil', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('tornado', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'WATERSPOUT'
levels(testLevelsFrame$newlevels)[agrep('wildfire', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'WILDFIRE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('winter storm', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'WINTER STORM'
levels(testLevelsFrame$newlevels)[unique(c(agrep('winter weather', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold weather', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'WINTER WEATHER'
length(levels(testLevelsFrame$newlevels))
View(levels(testLevelsFrame$newlevels))
agrep('coastal storm', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
agrep('cold', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
agrep('record winter snow', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
agrep('record snow', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
agrep('cool', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
agrep('dry', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
grep('dry', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
grep('gusty wind', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
grep('heavy surf', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
grep('swell', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
grep('surf', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
grep('landslide', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
grep('landsl', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
grep('astronomical tide', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
grep('astronomical tide', levels(testLevelsFrame$original_levels), ignore.case = T, value = T)
grep('tide', levels(testLevelsFrame$original_levels), ignore.case = T, value = T)
grep('fire', levels(testLevelsFrame$original_levels), ignore.case = T, value = T)
grep('astronomical low', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
grep('astronomical', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
events2look4 <- list(c('tide', 'avalanche', 'black ice', 'blizzard', 'coastal flood', 'fire', 'cold wind chill', 'debris flow', 'dense fog', 'dense smoke', 'drought', 'dust devil', 'dust storm', 'excessive heat', 'extreme cold wind chill', 'flash flood', 'flood', 'frost/freeze', 'funnel cloud', 'freezing fog', 'hail', 'heat', 'heavy rain', 'heavy snow', 'high surf', 'high wind', 'hurricane', 'ice storm', 'lake-effect snow', 'lakeshore flood', 'lightning', 'marine hail', 'marine high wind', 'marine strong wind', 'marine thunderstorm wind', 'rip current', 'seiche', 'sleet', 'storm surge/tide', 'strong wind', 'thunderstorm wind', 'tornado', 'tropical depression', 'tropical storm', 'tsunami', 'volcanic ash', 'waterspout', 'wildfire', 'winter storm', 'winter weather'))
lapply(events2look4, agrep(levels(testLevelsFrame$newlevels), ignore.case = T, value = T))
View(events2look4)
events2look4 <- list('tide', 'avalanche', 'black ice', 'blizzard', 'coastal flood', 'fire', 'cold wind chill', 'debris flow', 'dense fog', 'dense smoke', 'drought', 'dust devil', 'dust storm', 'excessive heat', 'extreme cold wind chill', 'flash flood', 'flood', 'frost/freeze', 'funnel cloud', 'freezing fog', 'hail', 'heat', 'heavy rain', 'heavy snow', 'high surf', 'high wind', 'hurricane', 'ice storm', 'lake-effect snow', 'lakeshore flood', 'lightning', 'marine hail', 'marine high wind', 'marine strong wind', 'marine thunderstorm wind', 'rip current', 'seiche', 'sleet', 'storm surge/tide', 'strong wind', 'thunderstorm wind', 'tornado', 'tropical depression', 'tropical storm', 'tsunami', 'volcanic ash', 'waterspout', 'wildfire', 'winter storm', 'winter weather'))
events2look4 <- list('tide', 'avalanche', 'black ice', 'blizzard', 'coastal flood', 'fire', 'cold wind chill', 'debris flow', 'dense fog', 'dense smoke', 'drought', 'dust devil', 'dust storm', 'excessive heat', 'extreme cold wind chill', 'flash flood', 'flood', 'frost/freeze', 'funnel cloud', 'freezing fog', 'hail', 'heat', 'heavy rain', 'heavy snow', 'high surf', 'high wind', 'hurricane', 'ice storm', 'lake-effect snow', 'lakeshore flood', 'lightning', 'marine hail', 'marine high wind', 'marine strong wind', 'marine thunderstorm wind', 'rip current', 'seiche', 'sleet', 'storm surge/tide', 'strong wind', 'thunderstorm wind', 'tornado', 'tropical depression', 'tropical storm', 'tsunami', 'volcanic ash', 'waterspout', 'wildfire', 'winter storm', 'winter weather')
lapply(events2look4, agrep(levels(testLevelsFrame$newlevels), ignore.case = T, value = T))
lapply(events2look4, function(x) {agrep(x, levels(testLevelsFrame$newlevels), ignore.case = T, value = T)})
lapply(events2look4, function(x) {agrep(x, levels(testLevelsFrame$newlevels), ignore.case = T, value = T)})
View(events2look4)
View(events2look4)
events2look4
names(events2look4) <- as.vector(events2look4)
View(events2look4)
events2look4
lapply(events2look4, function(x) {agrep(x, levels(testLevelsFrame$newlevels), ignore.case = T, value = T)})
lapply(events2look4, function(x) {agrep(x, levels(testLevelsFrame$original_levels), ignore.case = T, value = T)})
testLevelsFrame <- data.frame(original_levels=orevents)
testLevelsFrame$newlevels <- orevents
# Now we will modify the newlevels column.
levels(testLevelsFrame$newlevels)[grep('astronomical low', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'ASTRONOMICAL LOW TIDE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('avalanche', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'AVALANCHE'
levels(testLevelsFrame$newlevels)[agrep('black ice', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'BLACK ICE'
levels(testLevelsFrame$newlevels)[agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'BLIZZARD'
levels(testLevelsFrame$newlevels)[grep('fire', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'FIRE'
levels(testLevelsFrame$newlevels)[unique(c(agrep('coastal flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('erosion', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('beach flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('coastal flooding', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'COASTAL FLOOD'
levels(testLevelsFrame$newlevels)[agrep('coastal storm', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'COASTAL STORM'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('cold wave', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('excessive cold', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('bitter wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold temperature', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold', levels(testLevelsFrame$newlevels), ignore.case = T), grep('cool', levels(testLevelsFrame$newlevels), ignore.case = T))), unique(c(grep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T), grep('extreme cold', levels(testLevelsFrame$newlevels), ignore.case = T), grep('dry conditions', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record snow', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record heat', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record high', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record precipitation', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record temperature', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record warm', levels(testLevelsFrame$newlevels), ignore.case = T), grep('snowfall', levels(testLevelsFrame$newlevels), ignore.case = T), grep('extreme', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'COLD/WIND CHILL'
levels(testLevelsFrame$newlevels)[agrep('dense fog', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DENSE FOG'
levels(testLevelsFrame$newlevels)[agrep('dense smoke', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DENSE SMOKE'
levels(testLevelsFrame$newlevels)[agrep('drought', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DROUGHT'
levels(testLevelsFrame$newlevels)[agrep('dry', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DRY WEATHER'
levels(testLevelsFrame$newlevels)[unique(c(agrep('dust devil', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blowing dust', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'DUST DEVIL'
levels(testLevelsFrame$newlevels)[agrep('dust storm', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DUST STORM'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('excessive heat', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heat wave', levels(testLevelsFrame$newlevels), ignore.case = T), grep('hot', levels(testLevelsFrame$newlevels), ignore.case = T))), agrep('drought', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'EXCESSIVE HEAT'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('extreme cold wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), grep('freezing', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blowing snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('extreme wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record cold', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('extreme cold', levels(testLevelsFrame$newlevels), ignore.case = T))), agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'EXTREME COLD/WIND CHILL'
levels(testLevelsFrame$newlevels)[setdiff(agrep('flash flood', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('ice storm', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'FLASH FLOOD'
levels(testLevelsFrame$newlevels)[setdiff(agrep('flood', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('coastal flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('flash flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('lake flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('remnants of floyd', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'FLOOD'
levels(testLevelsFrame$newlevels)[unique(c(agrep('frost freeze', levels(testLevelsFrame$newlevels), ignore.case = T), grep('frost', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'FROST FREEZE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('funnel cloud', levels(testLevelsFrame$newlevels), ignore.case = T), grep('funnel', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'FUNNEL CLOUD'
length(testLevelsFrame$newlevels)
length(levels(testLevelsFrame$newlevels))
View(levels(testLevelsFrame$newlevels))
agrep('tide', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
grep('tide', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
# Now we will modify the newlevels column.
levels(testLevelsFrame$newlevels)[grep('astronomical low', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'ASTRONOMICAL LOW TIDE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('avalanche', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'AVALANCHE'
levels(testLevelsFrame$newlevels)[agrep('black ice', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'BLACK ICE'
levels(testLevelsFrame$newlevels)[agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'BLIZZARD'
levels(testLevelsFrame$newlevels)[grep('fire', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'FIRE'
levels(testLevelsFrame$newlevels)[unique(c(agrep('coastal flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('erosion', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('beach flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('coastal flooding', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'COASTAL FLOOD'
levels(testLevelsFrame$newlevels)[agrep('coastal storm', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'COASTAL STORM'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('cold wave', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('excessive cold', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('bitter wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold temperature', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold', levels(testLevelsFrame$newlevels), ignore.case = T), grep('cool', levels(testLevelsFrame$newlevels), ignore.case = T))), unique(c(grep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T), grep('extreme cold', levels(testLevelsFrame$newlevels), ignore.case = T), grep('dry conditions', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record snow', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record heat', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record high', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record precipitation', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record temperature', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record warm', levels(testLevelsFrame$newlevels), ignore.case = T), grep('snowfall', levels(testLevelsFrame$newlevels), ignore.case = T), grep('extreme', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'COLD/WIND CHILL'
levels(testLevelsFrame$newlevels)[agrep('dense fog', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DENSE FOG'
levels(testLevelsFrame$newlevels)[agrep('dense smoke', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DENSE SMOKE'
levels(testLevelsFrame$newlevels)[agrep('drought', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DROUGHT'
levels(testLevelsFrame$newlevels)[agrep('dry', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DRY WEATHER'
levels(testLevelsFrame$newlevels)[unique(c(agrep('dust devil', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blowing dust', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'DUST DEVIL'
levels(testLevelsFrame$newlevels)[agrep('dust storm', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DUST STORM'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('excessive heat', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heat wave', levels(testLevelsFrame$newlevels), ignore.case = T), grep('hot', levels(testLevelsFrame$newlevels), ignore.case = T))), agrep('drought', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'EXCESSIVE HEAT'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('extreme cold wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), grep('freezing', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blowing snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('extreme wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record cold', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('extreme cold', levels(testLevelsFrame$newlevels), ignore.case = T))), agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'EXTREME COLD/WIND CHILL'
levels(testLevelsFrame$newlevels)[setdiff(agrep('flash flood', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('ice storm', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'FLASH FLOOD'
levels(testLevelsFrame$newlevels)[setdiff(agrep('flood', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('coastal flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('flash flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('lake flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('remnants of floyd', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'FLOOD'
levels(testLevelsFrame$newlevels)[unique(c(agrep('frost freeze', levels(testLevelsFrame$newlevels), ignore.case = T), grep('frost', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'FROST FREEZE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('funnel cloud', levels(testLevelsFrame$newlevels), ignore.case = T), grep('funnel', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'FUNNEL CLOUD'
length(levels(testLevelsFrame$newlevels))
setdiff(unique(c(grep('storm surge', levels(testLevelsFrame$newlevels), ignore.case = T, value = T), grep('tide', levels(testLevelsFrame$newlevels), ignore.case = T, value = T))), grep('astronomical low', levels(testLevelsFrame$newlevels), ignore.case = T, value = T))
grep('tide', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
setdiff(unique(c(grep('storm surge', levels(testLevelsFrame$newlevels), ignore.case = T), grep('tide', levels(testLevelsFrame$newlevels), ignore.case = T))), grep('astronomical low', levels(testLevelsFrame$newlevels), ignore.case = T))
levels(testLevelsFrame$newlevels)[setdiff(unique(c(grep('storm surge', levels(testLevelsFrame$newlevels), ignore.case = T), grep('tide', levels(testLevelsFrame$newlevels), ignore.case = T))), grep('astronomical low', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'STORM SURGE/TIDE'
grep('tide', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
testLevelsFrame <- data.frame(original_levels=orevents)
testLevelsFrame$newlevels <- orevents
length(levels(testLevelsFrame$newlevels))
# Now we will modify the newlevels column.
levels(testLevelsFrame$newlevels)[grep('astronomical low', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'ASTRONOMICAL LOW TIDE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('avalanche', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'AVALANCHE'
levels(testLevelsFrame$newlevels)[agrep('black ice', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'BLACK ICE'
levels(testLevelsFrame$newlevels)[agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'BLIZZARD'
levels(testLevelsFrame$newlevels)[grep('fire', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'FIRE'
levels(testLevelsFrame$newlevels)[unique(c(agrep('coastal flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('erosion', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('beach flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('coastal flooding', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'COASTAL FLOOD'
levels(testLevelsFrame$newlevels)[agrep('coastal storm', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'COASTAL STORM'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('cold wave', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('excessive cold', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('bitter wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold temperature', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold', levels(testLevelsFrame$newlevels), ignore.case = T), grep('cool', levels(testLevelsFrame$newlevels), ignore.case = T))), unique(c(grep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T), grep('extreme cold', levels(testLevelsFrame$newlevels), ignore.case = T), grep('dry conditions', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record snow', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record heat', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record high', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record precipitation', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record temperature', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record warm', levels(testLevelsFrame$newlevels), ignore.case = T), grep('snowfall', levels(testLevelsFrame$newlevels), ignore.case = T), grep('extreme', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'COLD/WIND CHILL'
levels(testLevelsFrame$newlevels)[agrep('dense fog', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DENSE FOG'
levels(testLevelsFrame$newlevels)[agrep('dense smoke', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DENSE SMOKE'
levels(testLevelsFrame$newlevels)[agrep('drought', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DROUGHT'
levels(testLevelsFrame$newlevels)[agrep('dry', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DRY WEATHER'
levels(testLevelsFrame$newlevels)[unique(c(agrep('dust devil', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blowing dust', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'DUST DEVIL'
levels(testLevelsFrame$newlevels)[agrep('dust storm', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DUST STORM'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('excessive heat', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heat wave', levels(testLevelsFrame$newlevels), ignore.case = T), grep('hot', levels(testLevelsFrame$newlevels), ignore.case = T))), agrep('drought', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'EXCESSIVE HEAT'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('extreme cold wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), grep('freezing', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blowing snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('extreme wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record cold', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('extreme cold', levels(testLevelsFrame$newlevels), ignore.case = T))), agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'EXTREME COLD/WIND CHILL'
levels(testLevelsFrame$newlevels)[setdiff(agrep('flash flood', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('ice storm', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'FLASH FLOOD'
levels(testLevelsFrame$newlevels)[setdiff(agrep('flood', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('coastal flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('flash flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('lake flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('remnants of floyd', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'FLOOD'
levels(testLevelsFrame$newlevels)[unique(c(agrep('frost freeze', levels(testLevelsFrame$newlevels), ignore.case = T), grep('frost', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'FROST FREEZE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('funnel cloud', levels(testLevelsFrame$newlevels), ignore.case = T), grep('funnel', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'FUNNEL CLOUD'
# Now we will modify the newlevels column.
levels(testLevelsFrame$newlevels)[grep('astronomical low', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'ASTRONOMICAL LOW TIDE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('avalanche', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'AVALANCHE'
levels(testLevelsFrame$newlevels)[agrep('black ice', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'BLACK ICE'
levels(testLevelsFrame$newlevels)[agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'BLIZZARD'
levels(testLevelsFrame$newlevels)[grep('fire', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'FIRE'
levels(testLevelsFrame$newlevels)[unique(c(agrep('coastal flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('erosion', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('beach flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('coastal flooding', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'COASTAL FLOOD'
levels(testLevelsFrame$newlevels)[agrep('coastal storm', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'COASTAL STORM'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('cold wave', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('excessive cold', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('bitter wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold temperature', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold', levels(testLevelsFrame$newlevels), ignore.case = T), grep('cool', levels(testLevelsFrame$newlevels), ignore.case = T))), unique(c(grep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T), grep('extreme cold', levels(testLevelsFrame$newlevels), ignore.case = T), grep('dry conditions', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record snow', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record heat', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record high', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record precipitation', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record temperature', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record warm', levels(testLevelsFrame$newlevels), ignore.case = T), grep('snowfall', levels(testLevelsFrame$newlevels), ignore.case = T), grep('extreme', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'COLD/WIND CHILL'
levels(testLevelsFrame$newlevels)[agrep('dense fog', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DENSE FOG'
levels(testLevelsFrame$newlevels)[agrep('dense smoke', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DENSE SMOKE'
levels(testLevelsFrame$newlevels)[agrep('drought', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DROUGHT'
levels(testLevelsFrame$newlevels)[agrep('dry', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DRY WEATHER'
levels(testLevelsFrame$newlevels)[unique(c(agrep('dust devil', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blowing dust', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'DUST DEVIL'
levels(testLevelsFrame$newlevels)[agrep('dust storm', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DUST STORM'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('excessive heat', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heat wave', levels(testLevelsFrame$newlevels), ignore.case = T), grep('hot', levels(testLevelsFrame$newlevels), ignore.case = T))), agrep('drought', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'EXCESSIVE HEAT'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('extreme cold wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), grep('freezing', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blowing snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('extreme wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record cold', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('extreme cold', levels(testLevelsFrame$newlevels), ignore.case = T))), agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'EXTREME COLD/WIND CHILL'
levels(testLevelsFrame$newlevels)[setdiff(agrep('flash flood', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('ice storm', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'FLASH FLOOD'
levels(testLevelsFrame$newlevels)[setdiff(agrep('flood', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('coastal flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('flash flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('lake flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('remnants of floyd', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'FLOOD'
levels(testLevelsFrame$newlevels)[unique(c(agrep('frost freeze', levels(testLevelsFrame$newlevels), ignore.case = T), grep('frost', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'FROST FREEZE'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('funnel cloud', levels(testLevelsFrame$newlevels), ignore.case = T), grep('funnel', levels(testLevelsFrame$newlevels), ignore.case = T))), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'FUNNEL CLOUD'
levels(testLevelsFrame$newlevels)[agrep('freezing fog', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'FREEZING FOG'
levels(testLevelsFrame$newlevels)[grep('gusty wind', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'GUSTY WIND'
levels(testLevelsFrame$newlevels)[setdiff(agrep('hail', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('bitter wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blowing snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('extreme wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold wind chill', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'HAIL'
levels(testLevelsFrame$newlevels)[setdiff(grep('heat', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('excessive heat', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'heat'
levels(testLevelsFrame$newlevels)[unique(c(agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy shower', levels(testLevelsFrame$newlevels), ignore.case = T), grep('precipitation', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'HEAVY RAIN'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('excessive snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record winter snow', levels(testLevelsFrame$newlevels), ignore.case = T))), unique(c(agrep('heavy shower', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record low', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'HEAVY SNOW'
levels(testLevelsFrame$newlevels)[unique(c(grep('surf', levels(testLevelsFrame$newlevels), ignore.case = T), grep('swell', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'HIGH SURF'
levels(testLevelsFrame$newlevels)[setdiff(agrep('high wind', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('hurricane', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('marine high wind', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record cold', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'HIGH WIND'
levels(testLevelsFrame$newlevels)[unique(c(agrep('hurricane', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('typhoon', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'HURRICANE/TYPHOON'
levels(testLevelsFrame$newlevels)[setdiff(agrep('ice storm', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'ICE STORM'
levels(testLevelsFrame$newlevels)[agrep('lake effect snow', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'LAKE EFFECT SNOW'
levels(testLevelsFrame$newlevels)[agrep('lakeshore flood', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'LAKESHORE FLOOD'
levels(testLevelsFrame$newlevels)[agrep('landsl', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'LANDSLIDE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('lightning', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('tstm', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'LIGHTNING'
levels(testLevelsFrame$newlevels)[setdiff(agrep('marine hail', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('marine high wind', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'MARINE HAIL'
levels(testLevelsFrame$newlevels)[agrep('marine strong wind', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'MARINE STRONG WIND'
levels(testLevelsFrame$newlevels)[agrep('marine high wind', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'MARINE HIGH WIND'
levels(testLevelsFrame$newlevels)[agrep('marine thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'MARINE THUNDERSTORM WIND'
levels(testLevelsFrame$newlevels)[agrep('rip current', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'RIP CURRENT'
levels(testLevelsFrame$newlevels)[agrep('seiche', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'SEICHE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('sleet', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'SLEET'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(grep('storm surge', levels(testLevelsFrame$newlevels), ignore.case = T), grep('tide', levels(testLevelsFrame$newlevels), ignore.case = T))), grep('astronomical low', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'STORM SURGE/TIDE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('strong wind', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('marine strong wind', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'STRONG WIND'
levels(testLevelsFrame$newlevels)[setdiff(agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('marine thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'THUNDERSTORM WIND'
levels(testLevelsFrame$newlevels)[agrep('tornado', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'TORNADO'
levels(testLevelsFrame$newlevels)[agrep('tropical depression', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'TROPICAL DEPRESSION'
levels(testLevelsFrame$newlevels)[agrep('tropical storm', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'TROPICAL STORM'
levels(testLevelsFrame$newlevels)[agrep('tsunami', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'TSUNAMI'
levels(testLevelsFrame$newlevels)[agrep('volcanic ash', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'VOLCANIC ASH'
levels(testLevelsFrame$newlevels)[setdiff(agrep('waterspout', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('dust devil', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('tornado', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'WATERSPOUT'
levels(testLevelsFrame$newlevels)[agrep('wildfire', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'WILDFIRE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('winter storm', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'WINTER STORM'
levels(testLevelsFrame$newlevels)[unique(c(agrep('winter weather', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold weather', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'WINTER WEATHER'
length(levels(testLevelsFrame$newlevels))
testLevelsFrame <- data.frame(original_levels=orevents)
testLevelsFrame$newlevels <- orevents
# Now we will modify the newlevels column.
levels(testLevelsFrame$newlevels)[grep('astronomical low', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'ASTRONOMICAL LOW TIDE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('avalanche', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'AVALANCHE'
levels(testLevelsFrame$newlevels)[agrep('black ice', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'BLACK ICE'
levels(testLevelsFrame$newlevels)[agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'BLIZZARD'
levels(testLevelsFrame$newlevels)[grep('fire', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'FIRE'
levels(testLevelsFrame$newlevels)[unique(c(agrep('coastal flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('erosion', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('beach flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('coastal flooding', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'COASTAL FLOOD'
levels(testLevelsFrame$newlevels)[agrep('coastal storm', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'COASTAL STORM'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('cold wave', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('excessive cold', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('bitter wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold temperature', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold', levels(testLevelsFrame$newlevels), ignore.case = T), grep('cool', levels(testLevelsFrame$newlevels), ignore.case = T))), unique(c(grep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T), grep('extreme cold', levels(testLevelsFrame$newlevels), ignore.case = T), grep('dry conditions', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record snow', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record heat', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record high', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record precipitation', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record temperature', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record warm', levels(testLevelsFrame$newlevels), ignore.case = T), grep('snowfall', levels(testLevelsFrame$newlevels), ignore.case = T), grep('extreme', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'COLD/WIND CHILL'
levels(testLevelsFrame$newlevels)[agrep('dense fog', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DENSE FOG'
levels(testLevelsFrame$newlevels)[agrep('dense smoke', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DENSE SMOKE'
levels(testLevelsFrame$newlevels)[agrep('drought', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DROUGHT'
levels(testLevelsFrame$newlevels)[agrep('dry', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DRY WEATHER'
levels(testLevelsFrame$newlevels)[unique(c(agrep('dust devil', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blowing dust', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'DUST DEVIL'
levels(testLevelsFrame$newlevels)[agrep('dust storm', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DUST STORM'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('excessive heat', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heat wave', levels(testLevelsFrame$newlevels), ignore.case = T), grep('hot', levels(testLevelsFrame$newlevels), ignore.case = T))), agrep('drought', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'EXCESSIVE HEAT'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('extreme cold wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), grep('freezing', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blowing snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('extreme wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record cold', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('extreme cold', levels(testLevelsFrame$newlevels), ignore.case = T))), agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'EXTREME COLD/WIND CHILL'
levels(testLevelsFrame$newlevels)[setdiff(agrep('flash flood', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('ice storm', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'FLASH FLOOD'
levels(testLevelsFrame$newlevels)[setdiff(agrep('flood', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('coastal flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('flash flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('lake flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('remnants of floyd', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'FLOOD'
levels(testLevelsFrame$newlevels)[unique(c(agrep('frost freeze', levels(testLevelsFrame$newlevels), ignore.case = T), grep('frost', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'FROST FREEZE'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('funnel cloud', levels(testLevelsFrame$newlevels), ignore.case = T), grep('funnel', levels(testLevelsFrame$newlevels), ignore.case = T))), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'FUNNEL CLOUD'
levels(testLevelsFrame$newlevels)[agrep('freezing fog', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'FREEZING FOG'
levels(testLevelsFrame$newlevels)[grep('gusty wind', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'GUSTY WIND'
levels(testLevelsFrame$newlevels)[setdiff(agrep('hail', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('bitter wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blowing snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('extreme wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold wind chill', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'HAIL'
levels(testLevelsFrame$newlevels)[setdiff(grep('heat', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('excessive heat', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'heat'
levels(testLevelsFrame$newlevels)[unique(c(agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy shower', levels(testLevelsFrame$newlevels), ignore.case = T), grep('precipitation', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'HEAVY RAIN'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('excessive snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record winter snow', levels(testLevelsFrame$newlevels), ignore.case = T))), unique(c(agrep('heavy shower', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record low', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'HEAVY SNOW'
levels(testLevelsFrame$newlevels)[unique(c(grep('surf', levels(testLevelsFrame$newlevels), ignore.case = T), grep('swell', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'HIGH SURF'
levels(testLevelsFrame$newlevels)[setdiff(agrep('high wind', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('hurricane', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('marine high wind', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record cold', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'HIGH WIND'
levels(testLevelsFrame$newlevels)[unique(c(agrep('hurricane', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('typhoon', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'HURRICANE/TYPHOON'
levels(testLevelsFrame$newlevels)[setdiff(agrep('ice storm', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'ICE STORM'
levels(testLevelsFrame$newlevels)[agrep('lake effect snow', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'LAKE EFFECT SNOW'
levels(testLevelsFrame$newlevels)[agrep('lakeshore flood', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'LAKESHORE FLOOD'
levels(testLevelsFrame$newlevels)[agrep('landsl', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'LANDSLIDE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('lightning', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('tstm', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'LIGHTNING'
levels(testLevelsFrame$newlevels)[setdiff(agrep('marine hail', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('marine high wind', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'MARINE HAIL'
levels(testLevelsFrame$newlevels)[agrep('marine strong wind', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'MARINE STRONG WIND'
levels(testLevelsFrame$newlevels)[agrep('marine high wind', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'MARINE HIGH WIND'
levels(testLevelsFrame$newlevels)[agrep('marine thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'MARINE THUNDERSTORM WIND'
levels(testLevelsFrame$newlevels)[agrep('rip current', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'RIP CURRENT'
levels(testLevelsFrame$newlevels)[agrep('seiche', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'SEICHE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('sleet', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'SLEET'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(grep('storm surge', levels(testLevelsFrame$newlevels), ignore.case = T), grep('tide', levels(testLevelsFrame$newlevels), ignore.case = T))), grep('astronomical low', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'STORM SURGE/TIDE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('strong wind', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('marine strong wind', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'STRONG WIND'
levels(testLevelsFrame$newlevels)[setdiff(agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('marine thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'THUNDERSTORM WIND'
levels(testLevelsFrame$newlevels)[agrep('tornado', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'TORNADO'
levels(testLevelsFrame$newlevels)[agrep('tropical depression', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'TROPICAL DEPRESSION'
levels(testLevelsFrame$newlevels)[agrep('tropical storm', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'TROPICAL STORM'
levels(testLevelsFrame$newlevels)[agrep('tsunami', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'TSUNAMI'
levels(testLevelsFrame$newlevels)[agrep('volcanic ash', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'VOLCANIC ASH'
levels(testLevelsFrame$newlevels)[setdiff(agrep('waterspout', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('dust devil', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('tornado', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'WATERSPOUT'
levels(testLevelsFrame$newlevels)[agrep('wildfire', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'WILDFIRE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('winter storm', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'WINTER STORM'
levels(testLevelsFrame$newlevels)[unique(c(agrep('winter weather', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold weather', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'WINTER WEATHER'
length(levels(testLevelsFrame$newlevels))
View(levels(testLevelsFrame$newlevels))
grep('freeze', levels(testLevelsFrame$newlevels), ignore.case = T, value = T)
grep('freeze', levels(testLevelsFrame$original_levels), ignore.case = T, value = T)
grep('slide', levels(testLevelsFrame$original_levels), ignore.case = T, value = T)
str(rawData)
View(rawData)
head(rawData$PROPDMGEXP[rawData$PROPDMGEXP %in% c('k', "K")])
rawData$PROPDMGEXP[rawData$PROPDMGEXP %in% c('k', "K")] <- 1000
rawData <- read.csv('repdata_data_StormData.csv.bz2')
testLevelsFrame <- data.frame(original_levels=orevents)
testLevelsFrame$newlevels <- orevents
levels(testLevelsFrame$newlevels)[grep('astronomical low', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'ASTRONOMICAL LOW TIDE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('avalanche', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'AVALANCHE'
levels(testLevelsFrame$newlevels)[agrep('black ice', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'BLACK ICE'
levels(testLevelsFrame$newlevels)[agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'BLIZZARD'
levels(testLevelsFrame$newlevels)[grep('fire', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'FIRE'
levels(testLevelsFrame$newlevels)[unique(c(agrep('coastal flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('erosion', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('beach flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('coastal flooding', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'COASTAL FLOOD'
levels(testLevelsFrame$newlevels)[agrep('coastal storm', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'COASTAL STORM'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('cold wave', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('excessive cold', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('bitter wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold temperature', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold', levels(testLevelsFrame$newlevels), ignore.case = T), grep('cool', levels(testLevelsFrame$newlevels), ignore.case = T))), unique(c(grep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T), grep('extreme cold', levels(testLevelsFrame$newlevels), ignore.case = T), grep('dry conditions', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record snow', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record heat', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record high', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record precipitation', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record temperature', levels(testLevelsFrame$newlevels), ignore.case = T), grep('record warm', levels(testLevelsFrame$newlevels), ignore.case = T), grep('snowfall', levels(testLevelsFrame$newlevels), ignore.case = T), grep('extreme', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'COLD/WIND CHILL'
levels(testLevelsFrame$newlevels)[agrep('dense fog', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DENSE FOG'
levels(testLevelsFrame$newlevels)[agrep('dense smoke', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DENSE SMOKE'
levels(testLevelsFrame$newlevels)[agrep('drought', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DROUGHT'
levels(testLevelsFrame$newlevels)[agrep('dry', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DRY WEATHER'
levels(testLevelsFrame$newlevels)[unique(c(agrep('dust devil', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blowing dust', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'DUST DEVIL'
levels(testLevelsFrame$newlevels)[agrep('dust storm', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'DUST STORM'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('excessive heat', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heat wave', levels(testLevelsFrame$newlevels), ignore.case = T), grep('hot', levels(testLevelsFrame$newlevels), ignore.case = T))), agrep('drought', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'EXCESSIVE HEAT'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('extreme cold wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), grep('freezing', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blowing snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('extreme wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record cold', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('extreme cold', levels(testLevelsFrame$newlevels), ignore.case = T))), agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'EXTREME COLD/WIND CHILL'
levels(testLevelsFrame$newlevels)[setdiff(agrep('flash flood', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('ice storm', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'FLASH FLOOD'
levels(testLevelsFrame$newlevels)[setdiff(agrep('flood', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('coastal flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('flash flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('lake flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('remnants of floyd', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'FLOOD'
levels(testLevelsFrame$newlevels)[unique(c(agrep('frost freeze', levels(testLevelsFrame$newlevels), ignore.case = T), grep('frost', levels(testLevelsFrame$newlevels), ignore.case = T), grep('freeze', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'FROST FREEZE'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('funnel cloud', levels(testLevelsFrame$newlevels), ignore.case = T), grep('funnel', levels(testLevelsFrame$newlevels), ignore.case = T))), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'FUNNEL CLOUD'
levels(testLevelsFrame$newlevels)[agrep('freezing fog', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'FREEZING FOG'
levels(testLevelsFrame$newlevels)[grep('gusty wind', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'GUSTY WIND'
levels(testLevelsFrame$newlevels)[setdiff(agrep('hail', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('bitter wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blowing snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('extreme wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('wind chill', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold wind chill', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'HAIL'
levels(testLevelsFrame$newlevels)[setdiff(grep('heat', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('excessive heat', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'heat'
levels(testLevelsFrame$newlevels)[unique(c(agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T), grep('excessive rain', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy shower', levels(testLevelsFrame$newlevels), ignore.case = T), grep('precipitation', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'HEAVY RAIN'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('excessive snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record winter snow', levels(testLevelsFrame$newlevels), ignore.case = T))), unique(c(agrep('heavy shower', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record low', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'HEAVY SNOW'
levels(testLevelsFrame$newlevels)[unique(c(grep('surf', levels(testLevelsFrame$newlevels), ignore.case = T), grep('swell', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'HIGH SURF'
levels(testLevelsFrame$newlevels)[setdiff(agrep('high wind', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('hurricane', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('marine high wind', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('record cold', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'HIGH WIND'
levels(testLevelsFrame$newlevels)[unique(c(agrep('hurricane', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('typhoon', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'HURRICANE/TYPHOON'
levels(testLevelsFrame$newlevels)[setdiff(agrep('ice storm', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'ICE STORM'
levels(testLevelsFrame$newlevels)[agrep('lake effect snow', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'LAKE EFFECT SNOW'
levels(testLevelsFrame$newlevels)[agrep('lakeshore flood', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'LAKESHORE FLOOD'
levels(testLevelsFrame$newlevels)[unique(c(agrep('landsl', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('slide', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'LANDSLIDE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('lightning', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('heavy rain', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('tstm', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'LIGHTNING'
levels(testLevelsFrame$newlevels)[setdiff(agrep('marine hail', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('marine high wind', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'MARINE HAIL'
levels(testLevelsFrame$newlevels)[agrep('marine strong wind', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'MARINE STRONG WIND'
levels(testLevelsFrame$newlevels)[agrep('marine high wind', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'MARINE HIGH WIND'
levels(testLevelsFrame$newlevels)[agrep('marine thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'MARINE THUNDERSTORM WIND'
levels(testLevelsFrame$newlevels)[agrep('rip current', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'RIP CURRENT'
levels(testLevelsFrame$newlevels)[agrep('seiche', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'SEICHE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('sleet', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'SLEET'
levels(testLevelsFrame$newlevels)[setdiff(unique(c(grep('storm surge', levels(testLevelsFrame$newlevels), ignore.case = T), grep('tide', levels(testLevelsFrame$newlevels), ignore.case = T))), grep('astronomical low', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'STORM SURGE/TIDE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('strong wind', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('flood', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('marine strong wind', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'STRONG WIND'
levels(testLevelsFrame$newlevels)[setdiff(agrep('thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('marine thunderstorm wind', levels(testLevelsFrame$newlevels), ignore.case = T))] <- 'THUNDERSTORM WIND'
levels(testLevelsFrame$newlevels)[agrep('tornado', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'TORNADO'
levels(testLevelsFrame$newlevels)[agrep('tropical depression', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'TROPICAL DEPRESSION'
levels(testLevelsFrame$newlevels)[agrep('tropical storm', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'TROPICAL STORM'
levels(testLevelsFrame$newlevels)[agrep('tsunami', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'TSUNAMI'
levels(testLevelsFrame$newlevels)[agrep('volcanic ash', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'VOLCANIC ASH'
levels(testLevelsFrame$newlevels)[setdiff(agrep('waterspout', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('dust devil', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('tornado', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'WATERSPOUT'
levels(testLevelsFrame$newlevels)[agrep('wildfire', levels(testLevelsFrame$newlevels), ignore.case = T)] <- 'WILDFIRE'
levels(testLevelsFrame$newlevels)[setdiff(agrep('winter storm', levels(testLevelsFrame$newlevels), ignore.case = T), unique(c(agrep('blizzard', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('heavy snow', levels(testLevelsFrame$newlevels), ignore.case = T))))] <- 'WINTER STORM'
levels(testLevelsFrame$newlevels)[unique(c(agrep('winter weather', levels(testLevelsFrame$newlevels), ignore.case = T), agrep('cold weather', levels(testLevelsFrame$newlevels), ignore.case = T)))] <- 'WINTER WEATHER'
rawData$EVTYPE <- testLevelsFrame$newlevels
exponents <- rep('', 902297)
exponents[rawData$PROPDMGEXP %in% c('k', 'K')] <- 1000
exponents[rawData$PROPDMGEXP %in% c('h', 'H')] <- 100
exponents[rawData$PROPDMGEXP %in% c('m', 'M')] <- 1000000
exponents[rawData$PROPDMGEXP %in% c('b', 'B')] <- 1000000000
exponents <- rep(1, 902297)
exponents[rawData$PROPDMGEXP %in% c('h', 'H')] <- 100
exponents[rawData$PROPDMGEXP %in% c('k', 'K')] <- 1000
exponents[rawData$PROPDMGEXP %in% c('m', 'M')] <- 1000000
exponents[rawData$PROPDMGEXP %in% c('b', 'B')] <- 1000000000
View(rawData)
rawData$PROPDMG <- rawData$PROPDMG * exponents
exponents <- rep(1, 902297)
exponents[rawData$CROPDMGEXP %in% c('h', 'H')] <- 100
exponents[rawData$CROPDMGEXP %in% c('k', 'K')] <- 1000
exponents[rawData$CROPDMGEXP %in% c('m', 'M')] <- 1000000
exponents[rawData$CROPDMGEXP %in% c('b', 'B')] <- 1000000000
rawData$CROPDMG <- rawData$CROPDMG * exponents
install.packages('tidyverse')
library(dplyr)
DataSubset <- rawData %>% select(EVTYPE, PROPDMG, CROPDMG, FATALITIES, INJURIES)
DataSubset$TotalDMG <- DataSubset$PROPDMG + DataSubset$CROPDMG
ByDmg <- DataSubset %>% group_by(EVTYPE) %>% summarise(sum(TotalDMG)) %>% arrange(desc(TotalDMG))
ByDmg <- DataSubset %>% group_by(EVTYPE) %>% summarise(sum(TotalDMG))
arrange(ByDmg, desc(ByDmg$`sum(TotalDMG)`))
FatInjSummed <- DataSubset %>% group_by(EVTYPE) %>% summarise(sum(INJURIES), sum(FATALITIES))
View(FatInjSummed)
ByDmg <- arrange(ByDmg, desc(ByDmg$`sum(TotalDMG)`))
arrange(FatInjSummed, desc(FatInjSummed$`sum(FATALITIES)`), desc(FatInjSummed$`sum(INJURIES)`)
)
FatInjSummed <- arrange(FatInjSummed, desc(FatInjSummed$`sum(FATALITIES)`), desc(FatInjSummed$`sum(INJURIES)`))
library(ggplot2)
ggplot(data = head(ByDmg), aes(x = EVTYPE, y = TotalDMG)) + geom_bar()
View(ByDmg)
ggplot(data = head(ByDmg), aes(x = EVTYPE, y = sum(TotalDMG))) + geom_bar()
ggplot(data = head(ByDmg), aes(x = EVTYPE, y = `sum(TotalDMG)`)) + geom_bar()
ggplot(data = head(ByDmg), aes(x = EVTYPE, y = `sum(TotalDMG)`)) + geom_bar(stat = identity)
ggplot(data = head(ByDmg), aes(x = EVTYPE, y = `sum(TotalDMG)`)) + geom_bar(stat = 'identity')
head(ByDmg)
library(tidyr)
?gather
gather(FatInjSummed, key = "type", value = "number", FatInjSummed$`sum(INJURIES)`:FatInjSummed$`sum(FATALITIES)`)
gather(FatInjSummed, key = "type", value = "number", `sum(INJURIES)`:`sum(FATALITIES)`)
moltenframe <- gather(FatInjSummed, key = "type", value = "number", `sum(INJURIES)`:`sum(FATALITIES)`)
ggplot(moltenframe, aes(x = EVTYPE, y = number, fill=as.factor(type)))
ggplot(head(moltenframe), aes(x = EVTYPE, y = number, fill=as.factor(type)))
moltenframe <- arrange(moltenframe, moltenframe$number)
View(moltenframe)
moltenframe <- arrange(moltenframe, desc(moltenframe$number))
View(moltenframe)
ggplot(head(moltenframe), aes(x = EVTYPE, y = number, fill=as.factor(type)))
ggplot(head(moltenframe), aes(x = EVTYPE, y = number, fill=as.factor(type))) + geom_bar(position = 'dodge', stat='identity')
moltenframe <- gather(FatInjSummed, key = "type", value = "number", `sum(INJURIES)`:`sum(FATALITIES)`)
ggplot(head(moltenframe), aes(x = EVTYPE, y = number, fill=as.factor(type))) + geom_bar(position = 'dodge', stat='identity')
ggplot(head(moltenframe), aes(x = EVTYPE, y = number, fill=as.factor(type))) + geom_bar(stat='identity')
View(FatInjSummed)
ggplot(head(FatInjSummed), aes(x = EVTYPE, y = `sum(FATALITIES)`)) + geom_col()
par(mfrow = c(1, 2))
?barplot
ggplot(head(moltenframe), aes(x = EVTYPE, y = number) + geom_bar(stat='identity') + facet_grid(~type)
ggplot(head(moltenframe), aes(x = EVTYPE, y = number)) + geom_bar(stat='identity') + facet_grid(~type)
ggplot(head(moltenframe), aes(x = EVTYPE, y = number)) + geom_bar(stat='identity') + facet_wrap(~type)
ggplot(head(moltenframe), aes(x = EVTYPE, y = number)) + geom_bar(stat='identity') + facet_wrap(~type, nrow=1)
ggplot(head(moltenframe), aes(x = EVTYPE, y = number)) + geom_bar(stat='identity') + facet_wrap(~type, nrow=2)
ggplot(head(moltenframe), aes(x = EVTYPE, y = number, facet=type)) + geom_bar(stat='identity')
ggplot(head(moltenframe), aes(x = EVTYPE, y = number, facets=type)) + geom_bar(stat='identity')
ggplot(head(moltenframe), aes(x = EVTYPE, y = number, facets=as.factor(type))) + geom_bar(stat='identity')
ggplot(head(moltenframe), aes(x = EVTYPE, y = number)) + geom_bar(stat='identity') + facet_wrap(~as.factor(type))
ggplot(head(moltenframe), aes(x = EVTYPE, y = number)) + geom_bar(stat='identity') + facet_wrap(~as.factor(type), nrow = 2)
par(mfcol = c(2, 1))
moltenframe <- gather(head(FatInjSummed, 5), key = "type", value = "number", `sum(INJURIES)`:`sum(FATALITIES)`)
View(moltenframe)
ggplot(head(moltenframe), aes(x = EVTYPE, y = number, fill=as.factor(type))) + geom_bar(stat='identity')
ggplot(head(moltenframe), aes(x = EVTYPE, y = number, fill=as.factor(type))) + geom_bar(stat='identity', position = 'dodge')
ggplot(head(moltenframe), aes(x = EVTYPE, y = number, fill=type)) + geom_bar(stat='identity', position = 'dodge')
ggplot(moltenframe, aes(x = EVTYPE, y = number, fill=type)) + geom_bar(stat='identity', position = 'dodge')
ggplot(data = head(ByDmg), aes(x = EVTYPE, y = `sum(TotalDMG)`)) + geom_bar(stat = 'identity')
ggplot(moltenframe, aes(x = EVTYPE, y = number, fill=type)) + geom_bar(stat='identity', position = 'dodge')
ggplot(data = head(ByDmg), aes(x = EVTYPE, y = `sum(TotalDMG)`)) + geom_bar(stat = 'identity')
ggplot(data = head(ByDmg), aes(x = EVTYPE, y = `sum(TotalDMG)`)) + geom_bar(stat = 'identity')
ggplot(moltenframe, aes(x = EVTYPE, y = number, fill=type)) + geom_bar(stat='identity', position = 'dodge')
ggplot(data = head(ByDmg), aes(x = EVTYPE, y = `sum(TotalDMG)`)) + geom_bar(stat = 'identity')
ggplot(moltenframe, aes(x = EVTYPE, y = number, fill=type)) + geom_bar(stat='identity', position = 'dodge')
View(DataSubset)
ggplot(data = head(ByDmg), aes(x = EVTYPE, y = `sum(TotalDMG)`)) + geom_bar(stat = 'identity')
ggplot(moltenframe, aes(x = EVTYPE, y = number, fill=type)) + geom_bar(stat='identity', position = 'dodge')
head(ByDmg)
ggplot(data = head(ByDmg), aes(x = EVTYPE, y = `sum(TotalDMG)`)) + geom_bar(stat = 'identity')
moltenframe
ggplot(moltenframe, aes(x = EVTYPE, y = number, fill=type)) + geom_bar(stat='identity', position = 'dodge')
head(FatInjSummed)
ggplot(moltenframe, aes(x = EVTYPE, y = number, fill=type)) + geom_bar(stat='identity', position = 'dodge')
ggplot(data = head(ByDmg), aes(x = EVTYPE, y = `sum(TotalDMG)`)) + geom_bar(stat = 'identity')+xlab('Damage ($)') + ylab('Event')
ggplot(data = head(ByDmg), aes(x = EVTYPE, y = `sum(TotalDMG)`)) + geom_bar(stat = 'identity')+xlab('Event') + ylab('Damage ($)')
ggplot(moltenframe, aes(x = EVTYPE, y = number, fill=type)) + geom_bar(stat='identity', position = 'dodge')+xlab('Event') + ylab('Number of injuries/fatalities')
a = c(1, 2, 3, 4, 5)
var(a)
q()
pnorm(59, mean = 80, sd = 8)
pbinom(59, size = 400, prob = 0.2)
pbinom(69, size = 400, prob = 0.2)+pbinom(70, size = 400, prob = 0.2)+pbinom(71, size = 400, prob = 0.2)
dbinom(69, size = 400, prob = 0.2)+dbinom(70, size = 400, prob = 0.2)+dbinom(71, size = 400, prob = 0.2)
dbinom(59, size = 400, prob = 0.2)
pbinom(71, size = 400, prob = 0.2)-pbinom(69, size = 400, prob = 0.2)
dbinom(8, size = 10, 0.13)
dbinom(70, size = 245, 0.25)
pnorm(70, mean = (0.25*245), sd = (sqrt((0.25*245)*0.75)))
pbinom(70, size = 245, 0.25)
pbinom(70, size = 245, 0.25, lower.tail = F)
pnorm(70, mean = (0.25*245), sd = (sqrt((0.25*245)*0.75)), lower.tail = F)
sum(dbinom(70:245, size = 245, prob = 0.25))
pbinom(70, size = 245, prob = 0.25, lower.tail = F)
10/0.25
25*0.45
dbinom(6, 10, 0.56)
dbinom(2, 10, 0.56)
dbinom(600, 1000, 0.56)
qbinom(size = 100, prob = 0.56)
pbinom(60, size = 100, prob = 0.56)
pbinom(60, size = 100, prob = 0.56, lower.tail = F)
sum(dbinom(60:100, size = 100, prob = 0.56))
pbinom(60, size = 100, prob = 0.56)
pnorm(59.5, mean = 56, sd = 4.96, lower.tail = F)
dbinom(2, 3, 0.51)
70/4
30/47.5
15/32.5
dbinom(1, 10, 0.07)
dbinom(0, 10, 0.07)
1 - dbinom(9, 10, 0.93)
dbinom(9, 10, 0.93)
1 - dbinom(0, 10, 0.07)
sum(dbinom(35:3000000, size = 3000000, prob = 0.00001))
pnorm(35, mean = (3000000*0.00001), sd = sqrt(3000000*0.00001*(1-0.00001)))
pnorm(35, mean = (3000000*0.00001), sd = sqrt(3000000*0.00001*(1-0.00001)), lower.tail = F)
rm(PamData)
rm(PamData)
load("/media/umair/F00E03AB0E0369C4/Studies/Stats/BRFSS/brfss2013.RData")
rm(brfss2013)
setwd('/media/umair/F00E03AB0E0369C4/Studies/GitRepos/crypto-trackers/Exploring the Bitcoin cryptocurrency market')
dec6 <- read.csv('datasets/coinmarketcap_06122017.csv')
names(dec6)
library(dplyr)
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- dec6 %>% arrange(desc(percent_change_24h)) %>% head(10)
top10losers <- dec6 %>% arrange(percent_change_24h) %>% head(10)
top10winners
top10winners <- t7data %>% arrange(desc(percent_change_24h)) %>% head(10)
top10losers <- t7data %>% arrange(percent_change_24h) %>% head(10)
topvolatiles <- rbind(top10winners, top10losers)
top10winners <- t7data %>% arrange(desc(percent_change_24h)) %>% mutate(status = 'winner') %>% head(10)
top10losers <- t7data %>% arrange(percent_change_24h) %>% mutate(status = 'loser') %>% head(10)
topvolatiles <- rbind(top10winners, top10losers)
ggplot2::ggplot(data = topvolatiles, aes(x = reorder(id, -percent_chane_24h, fill=id))) + geom_bar(stat = 'identity')
library(ggplot2)
ggplot(data = topvolatiles, aes(x = reorder(id, -percent_chane_24h, fill=id))) + geom_bar(stat = 'identity')
ggplot(data = topvolatiles, aes(x = reorder(id, -percent_change_24h), y=percent_change_24h, fill=id))) + geom_bar(stat = 'identity')
ggplot(data = topvolatiles, aes(x = reorder(id, -percent_change_24h), y=percent_change_24h, fill=id)) + geom_bar(stat = 'identity')
plotvolatiles <- function(series, title) {
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- t7data %>% arrange(desc(series)) %>% mutate(status = 'winner') %>% head(10)
top10losers <- t7data %>% arrange(series) %>% mutate(status = 'loser') %>% head(10)
topvolatiles <- rbind(top10winners, top10losers)
ggplot(data = topvolatiles, aes(x = reorder(id, -percent_change_24h), y=percent_change_24h, fill=id)) + geom_bar(stat = 'identity')
}
plotvolatiles('percent_change_24h', 'Main')
plotvolatiles <- function(series, title) {
seriesmap <- list(verbose=c('day', 'week'), variable=c('percent_change_24h', 'percent_change_7d'))
t7data <- dec6 %>% select(id, percent_change_24h, percent_change_7d)
top10winners <- t7data %>% arrange(desc(seriesmap[seriesmap$verbose==series]$variable)) %>% mutate(status = 'winner') %>% head(10)
top10losers <- t7data %>% arrange(seriesmap[seriesmap$verbose==series]$variable) %>% mutate(status = 'loser') %>% head(10)
topvolatiles <- rbind(top10winners, top10losers)
ggplot(data = topvolatiles, aes(x = reorder(id, -percent_change_24h), y=percent_change_24h, fill=id)) + geom_bar(stat = 'identity')
}
plotvolatiles('day', 'Umair')
plotvolatiles('day', 'Umair')
?sort
